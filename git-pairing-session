#! /bin/bash

export GIT_PAIR_SESSION_DIR=$HOME/git-pairing-session

alias pairing_project=prepareProjectForPairing
alias pairing_with=setPair
alias no_longer_pairing=unsetPair
alias paired_with=setCoauthorsForCurrentBranch
alias add_colleague=addColleague
alias remove_colleague=removeColleague
alias get_colleague=getColleague

setCoauthorsForCurrentBranch() {
  setPair $1 &&
    git filter-branch -f --msg-filter "cat && $(coauthorMessage($1))" master..HEAD &&
    no_longer_pairing
}

prepareProjectForPairing() {
  ln -s -i $GIT_PAIR_SESSION_DIR/hooks/prepare-commit-msg .git/hooks/prepare-commit-msg
}

getPair() {
  git config --global --get pair.initials
}

unsetPair() {
  git config --global --unset pair.initials $1
}

setPair() {
  git config --global --add pair.initials $1
}

userName() {
  git config --get user.name
}

userEmail() {
  git config --get user.email
}

coauthorName() {
  git config --get colleagues.$1.name
}

coauthorEmail() {
  git config --get colleagues.$1.email
}

addColleague() {
  removeColleague $1 &&
  git config --global --add colleagues.$1.name "$2" &&
  git config --global --add colleagues.$1.email "$3"
}

removeColleague() {
  getColleague $1 > /dev/null
  if [ $? -eq 0 ]
  then
    git config --global --unset-all colleagues.$1.name &&
    git config --global --unset-all colleagues.$1.email &&
    git config --global --remove-section colleagues.$1
  fi
}

getColleague() {
  git config --global --get colleagues.$1.name
}

coauthorMessage() {
  echo "\"\n\nCo-authored-by: $(userName()) <$(userEmail())>\nCo-authored-by: $(coauthorName($1)) <$(coauthorEmail($1))>\""
}
